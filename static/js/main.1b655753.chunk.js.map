{"version":3,"sources":["components/navigation.js","images/main.jpg","components/header.js","components/aboutMe.js","components/softSkills.js","components/hardSkills-certificates.js","components/hardSkills-challenges.js","components/hardSkills.js","components/contact.js","components/projects-cards.js","components/projects.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","state","heightHeader","heightNavbar","opacity","handleScroll","bind","window","pageYOffset","this","setState","innerWidth","addEventListener","document","getElementById","clientHeight","removeEventListener","className","to","smooth","duration","offset","style","height","id","fontWeight","notMobile","React","Component","Header","name","src","mainImage","width","alt","AboutMe","Container","Row","Col","sm","href","Card","Title","Body","SoftSkills","text","HardSkillsCertificates","certificatesPython","link","from","certificatesCsharp","certificatesDB","certificatesGit","certificatesWebDev","certificatesDataScience","certificates","map","cert","type","createCards","renderSwitch","HardSkillsChallenges","challengesPython","website","solvedChallenges","challengesCsharp","challengesDB","challengesDataScience","challengesAbout","ListGroup","ListGroupItem","challenges","createChallengesCard","HardSkills","openPython","openCsharp","openDB","openGit","openWebDev","openDataScience","typeContainer","onClick","toggleContainerPython","renderContainer","toggleContainerDataScience","toggleContainerDB","toggleContainerWebDev","toggleContainerCsharp","toggleContainerGit","Contact","profiles","icon","Provider","value","size","profile","createProfilesIcons","ProjectsCards","projectsMachineLearning","title","star","mainTech","modules","tools","description","link_run","link_git","projectsComputerApps","projectsWebDev","projectsDataAnalysis","projects","project","length","tool","module","Projects","openProjects_MachineLearning","openProjects_ComputerApps","openProjects_DataAnalysis","openProjects_WebDev","toggleContainerML","toggleContainerDA","toggleContainerCA","toggleContainerWD","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b655753.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./navigation.css\";\r\nimport { AiOutlineFork } from 'react-icons/ai';\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      heightHeader: 0, //Height of header image\r\n      heightNavbar: 0,\r\n      opacity: 0,\r\n    };\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n  /* Background of navbar is dynamically displayed. How it works?\r\n        In componentDidMount:\r\n            There is a clientHeight, which gets height of header image and height of navbar div(without backgorund)\r\n            Then height is save to state\r\n            Also there is event listener, which call handleScroll func\r\n        In handleScroll:\r\n            There is dynamically calculated opacity \r\n            Then, opacity is save to state\r\n        In render:\r\n            Div with className navbarBackground have dynamically assigned opacity\r\n            navbarBackground should been dislayed when it is in half of header image\r\n             */\r\n  handleScroll() {\r\n    const opacity = (window.pageYOffset - this.state.heightHeader * 5) / 100;\r\n    this.setState({ opacity });\r\n  }\r\n  componentDidMount() {\r\n    if(window.innerWidth > 760){\r\n      window.addEventListener(\"scroll\", this.handleScroll);\r\n      const heightHeader = document.getElementById(\"header\").clientHeight;\r\n      const heightNavbar = document.getElementById(\"navbar\").clientHeight;\r\n      this.setState({ heightHeader, heightNavbar });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  notMobile(){\r\n    return(\r\n          \r\n        \r\n          <div className=\"navbarItems\">\r\n            {/* Other items of navbar */}\r\n            <Link\r\n              to=\"aboutMe\"\r\n              className=\"navbarItem\"\r\n              smooth={true}\r\n              duration={500}\r\n              offset={-50}\r\n            >\r\n              <p>O mnie</p>\r\n            </Link>\r\n            <Link\r\n              to=\"softSkills\"\r\n              className=\"navbarItem\"\r\n              smooth={true}\r\n              duration={500}\r\n              offset={-50}\r\n            >\r\n              <p>Kompetencje miękkie</p>\r\n            </Link>\r\n            <Link\r\n              to=\"hardSkills\"\r\n              className=\"navbarItem\"\r\n              smooth={true}\r\n              duration={500}\r\n              offset={-50}\r\n            >\r\n              <p>Kompetencje twarde</p>\r\n            </Link>\r\n            <Link\r\n              to=\"projects\"\r\n              className=\"navbarItem\"\r\n              smooth={true}\r\n              duration={500}\r\n              offset={-100}\r\n            >\r\n              <p>Moje projekty</p>\r\n            </Link>\r\n            <Link\r\n              to=\"contact\"\r\n              className=\"navbarItem\"\r\n              smooth={true}\r\n              duration={500}\r\n              offset={-50}\r\n            >\r\n              <p>Kontakt</p>\r\n            </Link>\r\n          </div>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* navbarBackground has dynamically calculated opacity */}\r\n        <div\r\n          className=\"navbarBackground\"\r\n          style={{\r\n            height: this.state.heightNavbar,\r\n            opacity: this.state.opacity,\r\n          }}\r\n        ></div>\r\n        {/* Main part of navbar \r\n                All links has smooth scroll to name elements of components\r\n        */}\r\n        <div className=\"navbar\" id=\"navbar\">\r\n\r\n          {/* Navbar brand */}\r\n          <Link \r\n            to=\"home\" \r\n            smooth={true} \r\n            duration={500}\r\n          >\r\n            <div className=\"navbarBrand\">\r\n              <h1 style={{fontWeight:'bold'}}>\r\n                P<AiOutlineFork/>T\r\n              </h1>\r\n            </div>\r\n          </Link>\r\n          {/* Tabs are not displayed on small screens  */}\r\n          {window.innerWidth > 760 ? this.notMobile() : null}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Navigation };\r\n","export default __webpack_public_path__ + \"static/media/main.87350510.jpg\";","import React from \"react\";\r\n//Import header image\r\nimport mainImage from \"../images/main.jpg\";\r\n\r\n//Create Header component\r\nconst Header = function () {\r\n  //Below are all styles for component, so there is no .css file for component\r\n  const imageStyle = {\r\n    width: \"100%\",\r\n  };\r\n  return (\r\n    <div \r\n      name=\"home\" //Anchor point for navigation \r\n      id=\"header\" //Navbar gets height of this div by id\r\n    >\r\n      <img\r\n        src={mainImage}\r\n        style={imageStyle}\r\n        alt=\"Coś z obrazkiem poszło nie tak. W każdym razie tu jestem ja na tle gór ;)\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React from \"react\";\r\nimport \"./aboutMe.css\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\n//Create AboutMe component\r\nconst AboutMe = function () {\r\n  return (\r\n    <div \r\n        name=\"aboutMe\" //Anchor point for navigation \r\n    >\r\n    {/* In container there are image(meme) and card with information about me*/}\r\n    {/* Row and cols in container create grid for pretty display */}\r\n      <Container>\r\n        <Row>\r\n          <Col sm={4}>\r\n            {/* Onclick meme redirects to website where i found meme */}\r\n            <a href=\"https://i.redd.it/l5pwx2lmfsj61.jpg\">\r\n              <img \r\n              className=\"memImage\" \r\n              src='https://lh3.googleusercontent.com/Y7oOemC7V9lPlJwp1pvWdAZq_mLkLZ_aT5sSc6aVoOZq1CpGSFjLYpOLzGoNWN4U-KWYLXsHt1zxh18S8THJOG3eqEX8XyK1b6b1_9V39cDe0m4gmIttPdXfkLHhasGSrwiNyw5UlA=w2400' \r\n              alt=\"Mem zestawiający wymagania rynkowe z tym, czego uczymy się w szkołach\"/>\r\n            </a>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <Card className=\"aboutMeCard\">\r\n              <Card.Header className=\"aboutMeCardHeader\">\r\n                <h1>O mnie</h1>\r\n              </Card.Header>\r\n              <Card.Title className=\"aboutMeCardTitle\">Hello World!</Card.Title>\r\n              <Card.Body>\r\n                <ul>\r\n                  <li>Jestem Jakub.</li>\r\n                  <li>Najbardziej interesujące mnie dziedziny informatyki to Data Science oraz Web Development.</li>\r\n                  <li>\r\n                    Studiuję zaocznie w Warszawskiej Wyższej Szkole Informatyki,\r\n                    na kierunku Data Science.\r\n                  </li>\r\n                  <li>\r\n                    Jestem absolwentem technikum informatycznego ze zdobytymi\r\n                    kwalifikacjami E12 (budowa komputerów), E13 (budowa sieci),\r\n                    E14 (budowa i administrowanie stronami internetowymi i bazami\r\n                    danych).\r\n                  </li>\r\n                  <li>\r\n                    Będąc świadomym, że na widocznym obrazku kryje się sporo prawdy, postanowiłem zostać samoukiem.\r\n                    Jak postanowiłem, tak też zrobiłem - co można zobaczyć w zakładce \"kompetencje twarde\" oraz w projektach.\r\n                  </li>\r\n                  <li>\r\n                    Jestem też instruktorem harcerskim, dzięki czemu kompetencje miękkie u\r\n                    mnie nie leżą ;)\r\n                  </li>\r\n                </ul>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AboutMe };\r\n","import React from \"react\";\r\nimport \"./softSkills.css\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport { AiFillInstagram } from \"react-icons/ai\";\r\n\r\nconst SoftSkills = function(){\r\n    return (\r\n        <div \r\n            className=\"softSkillsDiv\" \r\n            name=\"softSkills\" //Anchor point for navigation \r\n        >\r\n        {/* There is card with header and information, and also my photo */}\r\n        {/* Row and cols create grid for pretty display */}\r\n          <Row>\r\n            <Col sm={8}>\r\n              <Card className=\"softSkillsCard\" text=\"light\">\r\n                <Card.Header className=\"softSkillsCardHeader\">\r\n                  <h1>Kompetencje miękkie</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <p>\r\n                    Jak to programista, mam skłonności do introwertyzmu, ale\r\n                    potrafię odnaleźć się w każdej sytuacji. Niech potwierdzeniem\r\n                    moich kompetencji miękkich będą poniższe rezultaty:\r\n                  </p>\r\n                  <ul>\r\n                    <li>\r\n                      Kierowanie organizacją dwutygodniowego obozu dla 150 osób\r\n                    </li>\r\n                    <li>\r\n                      Kierowanie organizacją wydarzenia jednodniowego dla 180 osób\r\n                    </li>\r\n                    <li>Praca w McDonald’s</li>\r\n                    <li>\r\n                      Dowodzenie około 20 osobową grupą młodzieżową przez okres 3\r\n                      lat (2015-2018)\r\n                    </li>\r\n                    <li>\r\n                      Dowodzenie 16 osobową grupą młodzieżową od 2018 roku, razem\r\n                      z którą przeprowadzaliśmy kilka znaczących projektów, takich\r\n                      jak remont domu dla starszej, ubogiej pani czy dostarczanie paczek \r\n                      kombatantom na święta. Tą grupą wciąż dowodzę, a o naszych przedsięwzięciach \r\n                      można doczytać na naszym instagramie: \r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"softSkillsInstagram\">\r\n                    <a href=\"https://www.instagram.com/druzyny_z_pradoliny/\">\r\n                      <AiFillInstagram className=\"softSkillsInstagramIcon\" />\r\n                    </a>\r\n                    <p>#druzyny_z_pradoliny</p>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <img \r\n                className=\"meImage\" \r\n                src='https://lh3.googleusercontent.com/JdCIAR09KGKMrt8gIvgl7MGru1IASgsLYXiuiVraLhUvOiQKoo6gPJwNAnQWwdxalSb1Na2IpM6JzqEYxUe1DmqTrJ6n6EXD5A-WldDRAk7wKG68ZbJl2bRg7tIHtulDAtm5MtP1mg=w2400' \r\n                alt=\"Problem ze zdjęciem...\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n}\r\n\r\n\r\nexport { SoftSkills };\r\n","import React from \"react\";\r\nimport \"./hardSkills-certificates.css\";\r\n\r\nclass HardSkillsCertificates extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Data about certificates\r\n    //To add ccertificate, embed image, change state below and func createCards do rest\r\n    //To embaded photos use website: https://www.labnol.org/embed/google/photos/\r\n    this.state = {\r\n      certificatesPython: [\r\n        {\r\n          name: \"Scientific Computing with Python\",\r\n          link: \"https://freecodecamp.org/certification/jakubpyt/scientific-computing-with-python-v7\",\r\n          from: \"freeCodeCamp\"\r\n        },\r\n        {\r\n          name: \"Intermediate Python\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1158/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Python Data Structures\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1159/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Python for Beginners\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1157/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Python 3\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1073/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Python\",\r\n          link: \"https://www.kaggle.com/learn/certification/jakubpyt/python\",\r\n          from: \"Kaggle\"\r\n        },\r\n      ],\r\n      certificatesCsharp: [\r\n        {\r\n          name: \"C#\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1080/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"C# .NET od Podstaw do Tworzenia Aplikacji w WPF i XAML\",\r\n          link: \"https://www.udemy.com/certificate/UC-ccb0a31c-7f3f-484f-984f-9a37ef78e84b/\",\r\n          from: \"Udemy\"\r\n        },\r\n      ],\r\n      certificatesDB: [\r\n        {\r\n          name: \"SQL\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1060/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"PostgreSQL\",\r\n          link: \"https://www.udemy.com/certificate/UC-68579b7b-852d-4e4a-b8a7-87a3adec8aff/\",\r\n          from: \"Udemy\"\r\n        },\r\n        {\r\n          name: \"Advanced SQL(BigQuery)\",\r\n          link: \"https://www.kaggle.com/learn/certification/jakubpyt/advanced-sql\",\r\n          from: \"Kaggle\"\r\n        },        \r\n        {\r\n          name: \"Intro to SQL(BigQuery)\",\r\n          link: \"https://www.kaggle.com/learn/certification/jakubpyt/intro-to-sql\",\r\n          from: \"Kaggle\"\r\n        },\r\n        {\r\n          name: \"Big Data: Analiza danych przy użyciu SQL oraz BigQuery\",\r\n          link: \"https://www.udemy.com/certificate/UC-27d50908-c43a-40f0-98b3-51f0ac1ff664/\",\r\n          from: \"Udemy\"\r\n        }\r\n      ],\r\n      certificatesGit: [\r\n        {\r\n          name: \"GIT od podstaw dla każdego\",\r\n          link: \"https://www.udemy.com/certificate/UC-cdd5282f-3e78-4df2-83b5-1b0ac67e70d3/\",\r\n          from: \"Udemy\"\r\n        },\r\n      ],\r\n      certificatesWebDev: [\r\n        {\r\n          name: \"Bootcamp programistyczny 2020 (PL): Web dev Full stack (HTML, CSS, JavaScript, Angular 7, React 16, Python 3, Django 2, NativeScript 5)\",\r\n          link: \"https://www.udemy.com/certificate/UC-5d7d37d8-f783-4c74-aa4f-4885f0752f4c/\",\r\n          from: \"Udemy\"\r\n        },\r\n        {\r\n          name: \"Python Flask - aplikacje webowe\",\r\n          link: \"https://www.udemy.com/certificate/UC-3af1883e-740b-4718-a2bd-458cc982d10e/\",\r\n          from: \"Udemy\"\r\n        },\r\n        {\r\n          name: \"HTML\",\r\n          link: \"https://www.sololearn.com/Certificate/1014-16942149/jpg/\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"CSS\",\r\n          link: \"https://www.sololearn.com/Certificate/1023-16942149/jpg/\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Responsive Web Design\",\r\n          link: \"https://www.sololearn.com/Certificate/1162-16942149/jpg\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"JavaScript\",\r\n          link: \"https://www.sololearn.com/Certificate/1014-16942149/jpg/\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"jQuery\",\r\n          link: \"https://www.sololearn.com/Certificate/1082-16942149/jpg\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"React + Redux\",\r\n          link: \"https://www.sololearn.com/Certificate/1097-16942149/jpg\",\r\n          from: \"SoloLearn\"\r\n        }\r\n      ],\r\n      certificatesDataScience: [\r\n        {\r\n          name: \"Python for Data Science\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1161/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Pandas\",\r\n          link: \"https://www.kaggle.com/learn/certification/jakubpyt/pandas\",\r\n          from: \"Kaggle\"\r\n        },\r\n        {\r\n          name: \"Data Science\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1093/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Machine Learning\",\r\n          link: \"https://www.sololearn.com/certificates/course/en/16942149/1094/landscape/png\",\r\n          from: \"SoloLearn\"\r\n        },\r\n        {\r\n          name: \"Data Analysis with Python\",\r\n          link: \"https://freecodecamp.org/certification/jakubpyt/data-analysis-with-python-v7\",\r\n          from: \"freeCodeCamp\"\r\n        },\r\n        {\r\n          name: \"Data Visualization\",\r\n          link: \"https://www.kaggle.com/learn/certification/jakubpyt/data-visualization\",\r\n          from: \"Kaggle\"\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  //Method generate div with certificates cards by type\r\n  createCards(certificates){\r\n    return(\r\n      // In div below will be all certificates from choosen type\r\n      <div className=\"placeForCertificates\"> \r\n        {/* Div includes title and list of certificates */}\r\n        <h3 className=\"title-certificates\">Certyfikaty</h3>\r\n        <ul>\r\n        {certificates.map((cert) => (\r\n          <li key={cert.name}>\r\n            <div  className=\"certificate-div\">\r\n              {/* Each item of list includes inscription about certificate and button to show confirmation */}\r\n              <a href={cert.link} className=\"a-href-cert\">\r\n              <button className='btn-confirm-cert' >Otwórz potwierdzenie</button>\r\n              </a>\r\n              <p className=\"p-cert\"> {\">>>\"} ({cert.from}) - {cert.name}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Func call createCards func by type, to display it\r\n  renderSwitch(type) {\r\n    switch (type) {\r\n      case \"Python\":\r\n        return this.createCards(this.state.certificatesPython);\r\n      case \"Csharp\":\r\n        return this.createCards(this.state.certificatesCsharp);\r\n      case \"Databases\":\r\n        return this.createCards(this.state.certificatesDB);\r\n      case \"Git\":\r\n        return this.createCards(this.state.certificatesGit);\r\n      case \"WebDev\":\r\n        return this.createCards(this.state.certificatesWebDev);\r\n      case \"DataScience\":\r\n        return this.createCards(this.state.certificatesDataScience);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Type of certificates is download from hardSkils, then renderSwitch chooses \r\n                right function, createCards generate div with cards and then, card is display in hardSkills Component\r\n                */}\r\n        {this.renderSwitch(this.props.type)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport { HardSkillsCertificates };\r\n","import React from \"react\";\r\nimport { ListGroupItem, ListGroup } from \"react-bootstrap\";\r\nimport \"./hardSkills-challenges.css\";\r\n\r\nclass HardSkillsChallenges extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Data about solved challenges\r\n    //To add new type of solved challenges you should add data into state, and change renderSwitch func\r\n    this.state = {\r\n      challengesPython: [\r\n        {\r\n          website: \"SoloLearn\",\r\n          solvedChallenges: 31,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: 'Python',\r\n          solvedChallenges: 11,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: 'Problem Solving',\r\n          solvedChallenges: 6,\r\n        },\r\n      ],\r\n      challengesCsharp: [\r\n        {\r\n          website: \"SoloLearn\",\r\n          solvedChallenges: 11,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          solvedChallenges: 4,\r\n        },\r\n        {\r\n          website: \"Code Wars\",\r\n          solvedChallenges: 3,\r\n        },\r\n      ],\r\n      challengesDB: [\r\n        {\r\n          website: \"Kaggle\",\r\n          type: \"BigQuery\",\r\n          solvedChallenges: 22,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: \"Ogólnie bazy danych\",\r\n          solvedChallenges: 16,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: \"MS SQL\",\r\n          solvedChallenges: 9,\r\n        },\r\n        {\r\n          website: \"Code Wars\",\r\n          type: \"PostgreSQL\",\r\n          solvedChallenges: 6,\r\n        },\r\n        {\r\n          website: \"SoloLearn\",\r\n          type: \"MySQL\",\r\n          solvedChallenges: 4,\r\n        },\r\n      ],\r\n      challengesDataScience: [\r\n        {\r\n          website: \"SoloLearn\",\r\n          solvedChallenges: 15,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: 'Statistics',\r\n          solvedChallenges: 7,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          type: 'Artificial Intelligence',\r\n          solvedChallenges: 1,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  //Func generate card with data about solved challenges by type\r\n  createChallengesCard(challengesAbout) {\r\n    return (\r\n      <ListGroup className=\"cardAboutChallenges\">\r\n        <ListGroupItem className=\"titleCardAboutChallenges\">\r\n          <h5>Rozwiązane wyzwania programistyczne na stronach:</h5>{\" \"}\r\n        </ListGroupItem>\r\n        <ListGroupItem className=\"websitesCardAboutChallenges\">\r\n          <ul>\r\n            {challengesAbout.map((challenges) => (\r\n              <li key={challenges.name}>\r\n                <b>{challenges.website}</b>: {challenges.solvedChallenges}{\" \"}\r\n                \r\n                {challenges.type != null ? `- `+ challenges.type : null}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    );\r\n  }\r\n\r\n  //Func call createChallengesCard func by type, to display it\r\n  renderSwitch(type) {\r\n    switch (type) {\r\n      case \"Python\":\r\n        return this.createChallengesCard(this.state.challengesPython);\r\n      case \"Csharp\":\r\n        return this.createChallengesCard(this.state.challengesCsharp);\r\n      case \"Databases\":\r\n        return this.createChallengesCard(this.state.challengesDB);\r\n      case \"DataScience\":\r\n        return this.createChallengesCard(this.state.challengesDataScience);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Type of solved challenges is download from hardSkils, then renderSwitch chooses \r\n                right function, createChallengesCard generate card and then, card is display in hardSkills Component\r\n                */}\r\n        {this.renderSwitch(this.props.type)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { HardSkillsChallenges };","import React from \"react\";\r\nimport \"./hardSkills.css\";\r\n//Import icons for buttons\r\nimport { FaPython } from \"react-icons/fa\";\r\nimport { SiCsharp } from \"react-icons/si\";\r\nimport { FiDatabase } from \"react-icons/fi\";\r\nimport { DiGitBranch } from \"react-icons/di\";\r\nimport { GiSpiderWeb } from \"react-icons/gi\";\r\nimport { BsClipboardData } from \"react-icons/bs\";\r\nimport { HardSkillsCertificates } from \"./hardSkills-certificates\";\r\nimport { HardSkillsChallenges } from \"./hardSkills-challenges\";\r\n\r\nclass HardSkills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //Vars to define openness the containers with achivements\r\n            openPython: false,\r\n            openCsharp: false,\r\n            openDB: false,\r\n            openGit: false,\r\n            openWebDev: false,\r\n            openDataScience: false,\r\n        };\r\n    }\r\n    //Called func change state element for true or false\r\n    toggleContainerPython() {\r\n        this.setState({ openPython: !this.state.openPython });\r\n    }\r\n    toggleContainerCsharp() {\r\n        this.setState({ openCsharp: !this.state.openCsharp });\r\n    }\r\n    toggleContainerDB() {\r\n        this.setState({ openDB: !this.state.openDB });\r\n    }\r\n    toggleContainerGit() {\r\n        this.setState({ openGit: !this.state.openGit });\r\n    }\r\n    toggleContainerWebDev() {\r\n        this.setState({ openWebDev: !this.state.openWebDev });\r\n    }\r\n    toggleContainerDataScience() {\r\n        this.setState({ openDataScience: !this.state.openDataScience });\r\n    }\r\n\r\n    //Func return div with components certificates and challenges\r\n    //TypeContainer is string about type of achivements eg. \"Python\" and others\r\n    renderContainer(typeContainer) {\r\n        return (\r\n            <div className=\"placeForAchivements\">\r\n                <HardSkillsCertificates type = {typeContainer} />\r\n                <HardSkillsChallenges type = {typeContainer} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className=\"hardSkillsDiv\" \r\n                name=\"hardSkills\" //Anchor point for navigation \r\n            >\r\n                <h1 className=\"hardSkillsHeader\">Kompetencje twarde</h1>\r\n                <p className=\"hardSkillsExplanation\">Kliknij w zakładkę, aby zobaczyć certyfikaty i ukończone wyzwania programistyczne</p>\r\n\r\n                {/* For each type there is button, which call func toggleContainer for change value on true or false */}\r\n                <button onClick={this.toggleContainerPython.bind(this)} className=\"hardSkilsButton\" > Python <FaPython /> </button>\r\n                {/* If var in state for type is true, then call func render container for type */}\r\n                {this.state.openPython === true ? this.renderContainer(\"Python\") : null} \r\n\r\n                <button onClick={this.toggleContainerDataScience.bind(this)} className=\"hardSkilsButton\" > Data Science <BsClipboardData /> </button>\r\n                {this.state.openDataScience === true ? this.renderContainer(\"DataScience\")  : null}\r\n                \r\n                <button onClick={this.toggleContainerDB.bind(this)} className=\"hardSkilsButton\" > Bazy danych &amp; Big Data <FiDatabase /> </button>\r\n                {this.state.openDB === true ? this.renderContainer(\"Databases\")  : null}\r\n                \r\n                <button onClick={this.toggleContainerWebDev.bind(this)} className=\"hardSkilsButton\" > Web Development <GiSpiderWeb /> </button>\r\n                {this.state.openWebDev === true ? this.renderContainer(\"WebDev\")  : null}\r\n                \r\n                <button onClick={this.toggleContainerCsharp.bind(this)} className=\"hardSkilsButton\" > C# <SiCsharp /> </button>\r\n                {this.state.openCsharp === true ? this.renderContainer(\"Csharp\") : null}\r\n\r\n                <button onClick={this.toggleContainerGit.bind(this)} className=\"hardSkilsButton\" > Git <DiGitBranch /> </button>\r\n                {this.state.openGit === true ? this.renderContainer(\"Git\")  : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { HardSkills };\r\n","import React from \"react\";\r\nimport \"../components/contact.css\";\r\n//Import icons\r\nimport { AiFillLinkedin, AiFillGithub, AiOutlineSlack } from \"react-icons/ai\";\r\nimport { SiCodewars, SiHackerrank } from \"react-icons/si\";\r\nimport { FaFreeCodeCamp } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // In state are all my profiles\r\n    // If you want add profile, import icon and add dict{website, link, icon} to state\r\n    // The func createProfilesIcons will do the rest\r\n    this.state = {\r\n      profiles: [\r\n        {\r\n          website: \"LinkedId\",\r\n          link: \"https://www.linkedin.com/in/jakub-pyt/\",\r\n          icon: <AiFillLinkedin />,\r\n        },\r\n        {\r\n          website: \"GitHub\",\r\n          link: \"https://github.com/JakubPyt\",\r\n          icon: <AiFillGithub />,\r\n        },\r\n        {\r\n          website: \"SoloLearn\",\r\n          link: \"https://www.sololearn.com/profile/16942149\",\r\n          icon: <AiOutlineSlack />,\r\n        },\r\n        {\r\n          website: \"freeCodeCamp\",\r\n          link: \"https://www.freecodecamp.org/jakubpyt\",\r\n          icon: <FaFreeCodeCamp />,\r\n        },\r\n        {\r\n          website: \"HackerRank\",\r\n          link: \"https://www.hackerrank.com/pyt_jakub?hr_r=1\",\r\n          icon: <SiHackerrank />,\r\n        },\r\n        {\r\n          website: \"Codewars\",\r\n          link: \"https://www.codewars.com/users/pyt_jakub\",\r\n          icon: <SiCodewars />,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  // Func generate div inside which are circles for every profile\r\n  // Func gets profiles from state\r\n  createProfilesIcons(profiles) {\r\n    return (\r\n      // Div inside which are circles for every profile\r\n      <div className=\"divForContactIcons\">\r\n        {/* Provider is only for change size of icons */}\r\n        <IconContext.Provider value={{ size: \"50%\" }}>\r\n          {profiles.map((profile) => (\r\n            // Div singleProfile is for arrangement of circle and name of website\r\n            <div key={profile.website} className=\"singleProfile\">\r\n              {/* a tag is outer circle */}\r\n              <a className=\"aOuterCircle\" href={profile.link}>\r\n                {/* div is inner circle inside which is icon */}\r\n                <div className=\"innerCircle\">{profile.icon}</div>\r\n              </a>\r\n              <p>{profile.website}</p>\r\n            </div>\r\n          ))}\r\n        </IconContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"contactDiv\" \r\n        name=\"contact\" //Anchor point for navigation \r\n    >\r\n        <h1 className=\"contactDivHeader\">Kontakt</h1>\r\n        <p>Zapraszam do kontaktu przez profil na LinkedIn</p>\r\n        {this.createProfilesIcons(this.state.profiles)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Contact };\r\n","import React from \"react\";\r\nimport \"./projects-cards.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\n\r\nclass ProjectsCards extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Here is all information about the projects\r\n    // The order matters inside category\r\n    // If you want to add a new project just add an object with the arguments below\r\n    this.state = {\r\n      // =========================\r\n      // Machine Learning Projects\r\n      // =========================\r\n      projectsMachineLearning: [\r\n        {\r\n          title: \"Tabular Playground Series-Apr 2021\",\r\n          star: true,\r\n          mainTech: \"Python\",\r\n          modules: [\"Sklearn - MLPClassifier\", \"Pandas\", \"Seaborn\", \"Plotly\", \"Matplotlib\"],\r\n          tools: [\"Google Colaboratory\", \"Github\"],\r\n          description:\r\n            'Projekt stworzony w ramach kwietniowego (2021) konkursu na stronie Kaggle. W ramach projektu zająłem się problemem klasyfikacji binarnej. Stworzony przeze mnie model osiągnął dokładność na poziomie 0,79813. Zapraszam do obejrzenia projektu w Google Colab, pod przyciskiem \"Uruchom\" ;) .',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1MEkcEmXTamiuudCsBM__ja_cxud6tTK2?usp=sharing\",\r\n          link_git:\r\n            \"https://github.com/JakubPyt/Tabular_Playground_Series-Apr_2021\",\r\n        },\r\n        {\r\n          title: \"Predict Health Costs\",\r\n          star: false,\r\n          mainTech: \"Python\",\r\n          modules: [\"Tensorflow - Sequential\", \"Pandas\", \"Seaborn\", \"Matplotlib\"],\r\n          tools: [\"Google Colaboratory\", \"Github\"],\r\n          description:\r\n            'Projekt stworzony w ramach kursu \"Machine Learning with Python\" na stronie freecodecamp.org. W ramach projektu moim celem była predykcja kosztów leczenia. Zapraszam do obejrzenia projektu na Google Colab(przycisk Uruchom).',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1UkEIjC4ngs_1Xv7sXnBB5Ve0kCVm7sSl?usp=sharing\",\r\n          link_git: \"https://github.com/JakubPyt/Predict_Health_Costs\",\r\n        },\r\n      ],\r\n      // ===============================\r\n      // Computer Applications Projects\r\n      // ===============================\r\n      projectsComputerApps: [\r\n        {\r\n          title: \"Budget App\",\r\n          star: true,\r\n          mainTech: \"Python\",\r\n          modules: [\"Tkinter\", \"Matplotlib\", \"Pandas\"],\r\n          tools: [\"PyCharm\", \"Github\", \"Replit.com\"],\r\n          description:\r\n            'Aplikacja do obsługi finansów. Po jej uruchomieniu masz możliwość dodawać wpłaty i wypłaty do swojej książki finansowej (panas DataFrame). Dodatkowo, dzięki wgranemu modułowi matplotlib możesz wizualizować stan swojego rachunku, a wydatki zobaczysz na wykresie kołowym (stworzonym wedle kategorii). Przycisk \"Uruchom\" otworzy aplikację online, na stronie replit.com (uruchomienie projektu na stronie trochę trwa, ale mam nadzieję że nie będziesz żałować ;) ).',\r\n          link_run: \"https://replit.com/@JakubPyt/Budget-App#main.py\",\r\n          link_git: \"https://github.com/JakubPyt/Budget-App\",\r\n        },\r\n        {\r\n          title: \"Matrix Calculator\",\r\n          star: false,\r\n          mainTech: \"Python\",\r\n          modules: [\"Numpy\"],\r\n          tools: [\"PyCharm\", \"Github\"],\r\n          description:\r\n            \"Prosta aplikacja konsolowa, stworzona w celu przećwiczenia obsługi modułu numpy, który gra w niej pierwsze skrzypce. Przycisk uruchom przeniesie Cię do strony replit.com, gdzie będziesz mieć możliwość zobaczenia kalkulatora macierzy w akcji.\",\r\n          link_run: \"https://replit.com/@JakubPyt/Matrix-Calculator-1#main.py\",\r\n          link_git: \"https://github.com/JakubPyt/Matrix-Calculator\",\r\n        },\r\n      ],\r\n      // ========================\r\n      // Web Development Projects\r\n      // ========================\r\n      projectsWebDev: [\r\n        {\r\n          title: \"Ta strona\",\r\n          star: true,\r\n          mainTech: \"React\",\r\n          modules: [\r\n            \"React-Bootstrap\",\r\n            \"React-Icons\",\r\n            \"React-Scroll\",\r\n            \"gh-pages\",\r\n          ],\r\n          tools: [\r\n            \"Visual Studio Code\",\r\n            \"Github\",\r\n            \"Github Pages\",\r\n            \"Embed Google Photos\"\r\n          ],\r\n          description:\r\n            \"Strona stworzona w celu zebrania wszystkich moich projektów i osiągnięć programistycznych w jednym miejscu. \",\r\n          link_run: \"\",\r\n          link_git: \"https://github.com/JakubPyt/website-about-me\",\r\n        },\r\n        {\r\n          title: \"Financial App\",\r\n          star: true,\r\n          mainTech: \"Python(Flask), SQL(PostgreSQL)\",\r\n          modules: [\r\n            \"Flask\",\r\n            \"Flask-SQLAlchemy\",\r\n            \"Pandas\",\r\n            \"Plotly-express\",\r\n            \"HTML\",\r\n            \"CSS\",\r\n            \"Bootstrap\",\r\n            \"JavaScript\",\r\n            \"jQuery\",\r\n            \"SQL\"\r\n          ],\r\n          tools: [\r\n            \"Visual Studio Code\",\r\n            \"PostgreSQL\",\r\n            \"Git\",\r\n            \"Github\",\r\n          ],\r\n          description:\r\n            \"Marzysz o bogactwie? Możesz je osiągnąć, jeśli tylko będziesz dobrze zarządzał finansami! A ta aplikacja może Ci to ułatwić! Księga wydatków i wpłat, wizualizacje stanu konta - to podstawowe funkcje tej aplikacji. Aplikacja stworzona w dwóch wersjach, wyglądowo niemal identycznych, ale różniących się back-endem. Wersja 1: Demonstracyjna (pod przyciskiem Uruchom) - oparta o pandas DataFrame z wgranymi bazowo przykładowymi danymi, które możesz edytować, usuwać i dodawać swoje. Wersja 2: Jak mebel z ikei, czyli do złożenia samodzielnie. W repozytorium na Githubie(pod przyciskiem 'Zobacz na Githubie') jest pełen opis co krok po kroku trzeba zrobić. Ta wersja oparta jest o połączenie z bazą danych PostgreSQL za pomocą SQLAlchemy. UWAGA! Wersja spod przycisku uruchom może 'budzić się' nawet kilka minut! \",\r\n          link_run: \"https://replit.com/@JakubPyt/Financial-App-demo#main.py\",\r\n          link_git: \"https://github.com/JakubPyt/Financial-App-withDB\"\r\n        },\r\n        {\r\n          title: \"Tribute Page\",\r\n          star: false,\r\n          mainTech: \"HTML\",\r\n          modules: [\"CSS\"],\r\n          tools: [\"Visual Studio Code\", \"Github\", \"Github Pages\"],\r\n          description:\r\n            'Projekt stworzony podczas kursu \"Responsive Web Design\" na stronie freecodecamp.org. W ramach projektu stworzyłem stronę hołdu dla Alberta Einsteina. Przycisk uruchom przeniesie Cię na tą stronę w GitHub Pages. ',\r\n          link_run: \"https://jakubpyt.github.io/Tribute-Page/\",\r\n          link_git: \"https://github.com/JakubPyt/Tribute-Page\",\r\n        },\r\n      ],\r\n      // ===================================\r\n      // Analysis and Visualisation Projects\r\n      // ===================================\r\n      projectsDataAnalysis: [\r\n        {\r\n          title: \"Demographic Data Analyzer\",\r\n          star: true,\r\n          mainTech: \"Python\",\r\n          modules: [\"Pandas\", \"Matplotlib\", \"Seaborn\", \"Plotly\"],\r\n          tools: [\"Jupyter Notebook\", \"Google Colaboratory\"],\r\n          description:\r\n            'Projekt stworzony w ramach kursu \"Data Analysis\" na stronie freecodecamp.org, przy czym rozbudowałem zakres moich zadań w tym notatniku. W tym projekcie moim głównym celem było przećwiczenie umiejętności związanych z modułem Pandas. Zaś ogólnym celem projektu było wybranie konkretnych danych z DataFrame. Dodatkowo postanowiłem dla każdego z zadań stworzyć wizualną odpowiedź. Przycisk uruchom przeniesie Cię do mojego notatnika w Google Colab.',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1sGyA4vC3_4Wi3bHTRG54Wjwx6BhmSH8r?usp=sharing\",\r\n          link_git: \"https://github.com/JakubPyt/Demographic_Data_Analyzer\",\r\n        },\r\n        {\r\n          title: \"Medical Data Visualizer\",\r\n          star: false,\r\n          mainTech: \"Python\",\r\n          modules: [\"Pandas\", \"Numpy\", \"Seaborn\"],\r\n          tools: [\"Jupyter Notebook\", \"Google Colaboratory\"],\r\n          description:\r\n            'Projekt stworzony w ramach kursu \"Data Analysis\" na stronie freecodecamp.org. W tym projekcie moim zadaniem była praca z danymi medycznymi: dodawanie wyliczonych kolumn, normalizacja, sprzątanie danych oraz ich wizualizacja. Przycisk uruchom przeniesie Cię do mojego notatnika w Google Colaboratory. ',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1J657ce9urZj-U4nv9pYYUuIcs-cJp0iB?usp=sharing\",\r\n          link_git: \"https://github.com/JakubPyt/Medical_Data_Visualizer\",\r\n        },\r\n        {\r\n          title: \"Page View Time Series Visualizer\",\r\n          star: false,\r\n          mainTech: \"Python\",\r\n          modules: [\"Pandas\", \"Numpy\", \"Seaborn\", \"Matplotlib\"],\r\n          tools: [\"Jupyter Notebook\", \"Google Colaboratory\"],\r\n          description:\r\n            'Projekt stworzony w ramach kursu \"Data Analysis\" na stronie freecodecamp.org. Głównym celem tego projektu była wizualizacja danych wyświetleń forum freeCodeCamp. Przycisk uruchom przeniesie Cię do mojego notatnika w Google Colaboratory. ',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1HRgcZxwUxjjp59GVi0MGKJxHgZpChHRz?usp=sharing\",\r\n          link_git:\r\n            \"https://github.com/JakubPyt/Page_View_Time_Series_Visualizer\",\r\n        },\r\n        {\r\n          title: \"Sea level predictor\",\r\n          star: false,\r\n          mainTech: \"Python\",\r\n          modules: [\"Pandas\", \"Matplotlib\", \"Scipy\"],\r\n          tools: [\"Jupyter Notebook\", \"Google Colab\"],\r\n          description:\r\n            'Projekt stworzony w ramach kursu \"Data Analysis\" na stronie freecodecamp.org. W tym projekcie moim zadaniem było zwizualizowanie danych poziomu morza od roku 1880 i za pomocą modułu Scipy wyznaczenie dwóch linii najlepszego dopasowania do danych. Jedna linia uwzględniała dane od roku 1880, druga zaś tylko od roku 2000. Wnioski są dosyć smutne. Przycisk uruchom przeniesie Cię do mojego notatnika w Google Colaboratory. ',\r\n          link_run:\r\n            \"https://colab.research.google.com/drive/1cy4GF4V0MlTnEp4XjHrCDgtbadKCsBpY?usp=sharing\",\r\n          link_git: \"https://github.com/JakubPyt/Sea_Level_Predictor\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  \r\n  // This function generate place for cards with cards from one type\r\n  createCards(projects) {\r\n    return (\r\n      // It generates field\r\n      <div className=\"placeForProjects\">\r\n        {\r\n          // This map get all projects(from one catgory) from state\r\n          projects.map((project) => (\r\n            // The whole card(each project has one)\r\n            <Card key={project.name} className=\"projectCard\">\r\n              {/* Header */}\r\n              <Card.Header className=\"projectCardHeader\">\r\n                {project.title} {project.star === true ? <AiFillStar /> : null}\r\n              </Card.Header>\r\n\r\n              <Card.Body className=\"projectCardBody\">\r\n                {/* mainTech */}\r\n                Technologia przewodnia:{\" \"}\r\n                <p className=\"projectCardMainTech\"> {project.mainTech} </p>\r\n                {/* tools */}\r\n                {/* Not displayed if empty */}\r\n                {project.tools.length === [] ? null : (\r\n                  <div>\r\n                    <p className=\"projectCardListHeader\">Narzędzia:</p>\r\n                    <div className=\"projectCardList\">\r\n                      {project.tools.map((tool) => (\r\n                        <p key={tool} className=\"projectCardListElement\"># {tool}</p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* modules */}\r\n                {/* Not displayed if empty */}\r\n                {project.modules.length === [] ? null : (\r\n                  <div>\r\n                    <p className=\"projectCardListHeader\">Dodatkowe moduły:</p>\r\n                    <div className=\"projectCardList\">\r\n                      {project.modules.map((module) => (\r\n                        <p key={module} className=\"projectCardListElement\"># {module}</p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* description */}\r\n                Opis:{\" \"}\r\n                <div className=\"projectCardDesc\">{project.description}</div>\r\n                {/* buttons */}\r\n                <div className=\"projectCardButtonsSection\">\r\n                  {/* Run button */}\r\n                  {/* Not displayed if empty */}\r\n                  {project.link_run === \"\" ? null : (\r\n                    <a href={project.link_run}>\r\n                      <button className=\"projectCardButton\">Uruchom</button>\r\n                    </a>\r\n                  )}\r\n\r\n                  {/* Git button */}\r\n                  <a href={project.link_git}>\r\n                    <button className=\"projectCardButton\">\r\n                      Zobacz na GitHubie\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // This function switch which type of projects has to be displayed\r\n  renderSwitch(type) {\r\n    switch (type) {\r\n      case \"CA\": // Analytical Applications\r\n        return this.createCards(this.state.projectsComputerApps);\r\n      case \"DA\": // Data Analysis\r\n        return this.createCards(this.state.projectsDataAnalysis);\r\n      case \"WD\": // Web Dev\r\n        return this.createCards(this.state.projectsWebDev);\r\n      case \"ML\": // Machine Learning\r\n        return this.createCards(this.state.projectsMachineLearning);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  // render function get type of projects from Projects component\r\n  // and send this type to render switch function\r\n  // render switch call create cards function \r\n  // and place for cards with cards is returned to be display\r\n  render() {\r\n    return <div>{this.renderSwitch(this.props.type)}</div>;\r\n  }\r\n}\r\n\r\nexport { ProjectsCards };\r\n","import React from \"react\";\r\nimport \"./projects.css\";\r\nimport { ProjectsCards } from \"./projects-cards\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nclass Projects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // This elements of state switch displayed card with projects\r\n      openProjects_MachineLearning: true,\r\n      openProjects_ComputerApps: false,\r\n      openProjects_DataAnalysis: false,\r\n      openProjects_WebDev: false,\r\n    };\r\n  }\r\n\r\n  // Next four functions switch displayed card\r\n  toggleContainerCA() { // Analytical Apps\r\n    this.setState({\r\n      openProjects_ComputerApps: true,\r\n      openProjects_DataAnalysis: false,\r\n      openProjects_WebDev: false,\r\n      openProjects_MachineLearning: false,\r\n    });\r\n  }\r\n  toggleContainerDA() { // Data Analysis\r\n    this.setState({\r\n      openProjects_ComputerApps: false,\r\n      openProjects_DataAnalysis: true,\r\n      openProjects_WebDev: false,\r\n      openProjects_MachineLearning: false,\r\n    });\r\n  }\r\n  toggleContainerWD() { // Web Dev\r\n    this.setState({\r\n      openProjects_ComputerApps: false,\r\n      openProjects_DataAnalysis: false,\r\n      openProjects_WebDev: true,\r\n      openProjects_MachineLearning: false,\r\n    });\r\n  }\r\n  toggleContainerML() { // Machine Learning Projects\r\n    this.setState({\r\n      openProjects_ComputerApps: false,\r\n      openProjects_DataAnalysis: false,\r\n      openProjects_WebDev: false,\r\n      openProjects_MachineLearning: true,\r\n    });\r\n  }\r\n\r\n  // This function is called when element from state has value 'true'\r\n  // This function call projects-cards component,\r\n  // which return place for cards with cards from chosen category\r\n  renderContainer(typeContainer) {\r\n    return (\r\n      <div>\r\n        <ProjectsCards type={typeContainer} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"projectsDiv\" //For style\r\n        name=\"projects\" // For navigation\r\n      >\r\n        {/* Header with buttons to switch displayed projects category \r\n            Buttons call toggle container function for them category\r\n            Toggle container function change state for category to true, and for other categories to false\r\n        */}\r\n        <h1 className=\"projectsHeader\">Moje projekty</h1>\r\n        <p className=\"project-comment\">\r\n          Projekty z <AiFillStar /> to te projekty, z których jestem najbardziej dumny.\r\n        </p>\r\n        <div className=\"switchButtons\">\r\n          {/* Button with category, which has value true in state gets class 'active' */}\r\n          <button\r\n            onClick={this.toggleContainerML.bind(this)}\r\n            className={`switchButton ${this.state.openProjects_MachineLearning ? \r\n              \"switchButtonActive\" : \"\" } `}\r\n          >\r\n            Machine Learning\r\n          </button>\r\n          <button\r\n            onClick={this.toggleContainerDA.bind(this)}\r\n            className={`switchButton ${this.state.openProjects_DataAnalysis ? \r\n              \"switchButtonActive\" : \"\" } `}\r\n          >\r\n            Analiza danych i wizualizacja\r\n          </button>\r\n          <button\r\n            onClick={this.toggleContainerCA.bind(this)}\r\n            className={`switchButton ${this.state.openProjects_ComputerApps ? \r\n              \"switchButtonActive\" : \"\" } `}\r\n          >\r\n            Aplikacje na komputer\r\n          </button>\r\n          <button\r\n            onClick={this.toggleContainerWD.bind(this)}\r\n            className={`switchButton ${this.state.openProjects_WebDev \r\n              ? \"switchButtonActive\" : \"\"} `}\r\n          >\r\n            Web development\r\n          </button>\r\n        </div>\r\n\r\n        {/* When value of state element is true, ternary operators below call render container function with them category.\r\n            Next - from render container function is returned place for cards with cards from specific category.  \r\n        */}\r\n        {this.state.openProjects_ComputerApps === true\r\n          ? this.renderContainer(\"CA\")\r\n          : null}\r\n\r\n        {this.state.openProjects_DataAnalysis === true\r\n          ? this.renderContainer(\"DA\")\r\n          : null}\r\n\r\n        {this.state.openProjects_WebDev === true\r\n          ? this.renderContainer(\"WD\")\r\n          : null}\r\n\r\n        {this.state.openProjects_MachineLearning === true\r\n          ? this.renderContainer(\"ML\")\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Projects };\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Import components\r\nimport {Navigation} from './components/navigation';\r\nimport {Header} from './components/header'; \r\nimport {AboutMe} from './components/aboutMe';\r\nimport {SoftSkills} from './components/softSkills';\r\nimport {HardSkills} from './components/hardSkills';\r\nimport {Contact} from './components/contact';\r\nimport {Projects} from './components/projects';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        {/* Display all components */}\r\n        <Navigation/>\r\n        <Header/>\r\n        <AboutMe/>\r\n        <SoftSkills/>\r\n        <HardSkills/>\r\n        <Projects/>\r\n        <Contact/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}